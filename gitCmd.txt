======================================================
Git commands which are being covered:

1.git config
======================================================
This command sets the author name and email address respectively to be used with your commits.
git config –global user.name “[name]”
git config –global user.email “[email address]”
------------------------------------------------------

2.git init
======================================================
This command is used to start a new repository.
git init [repository name]
------------------------------------------------------

3.git clone
======================================================
This command is used to obtain a repository from an existing URL.
git clone repoName
------------------------------------------------------

4.git add
======================================================
4.This command adds a file to the staging area/adds one or more to the staging area.
git add *
------------------------------------------------------

5.git commit
======================================================
This command records or snapshots the file permanently in the version history.
git commit -m “[ Type in the commit message]”
This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then
git commit -a
-----------------------------------------------------

6.git diff
=====================================================
This command shows the file differences which are not yet staged.

git diff –staged
This command shows the differences between the files in the staging area and the latest version present.

git diff [first branch] [second branch]
This command shows the differences between the two branches mentioned.
-----------------------------------------------------

7.git reset
=====================================================
git reset [file]
This command unstages the file, but it preserves the file contents.

git reset [commit]
This command undoes all the commits after the specified commit and preserves the changes locally.

git reset –hard [commit]  This command discards all history and goes back to the specified commit.
-----------------------------------------------------

8.git status
=====================================================
git status
This command lists all the files that have to be committed.
-----------------------------------------------------

9.git rm
======================================================
git rm [file]
This command deletes the file from your working directory and stages the deletion.
------------------------------------------------------

10.git log
======================================================
git log
This command is used to list the version history for the current branch.
git log –follow[file]
This command lists version history for a file, including the renaming of files also.
------------------------------------------------------

11.git show
======================================================
git show [commit]
This command shows the metadata and content changes of the specified commit.
-------------------------------------------------------
git tag
=======================================================
git tag [commitID]

This command is used to give tags to the specified commit.
----------------------------------------------------------
git branch
==========================================================
git branch
This command lists all the local branches in the current repository.

git branch [branch name]
This command creates a new branch.

git branch -d [branch name]
This command deletes the feature branch.
----------------------------------------------------------
git checkout
==========================================================
git checkout [branch name]
This command is used to switch from one branch to another.

git checkout -b [branch name]
This command creates a new branch and also switches to it.
----------------------------------------------------------
git merge
==========================================================
git merge [branch name]

This command merges the specified branch’s history into the current branch.
-----------------------------------------------------------
git remote
===========================================================
git remote add [variable name] [Remote Server Link]
This command is used to connect your local repository to the remote server.
-------------------------------------------------------------
git push
=============================================================
git push [variable name] master
This command sends the committed changes of master branch to your remote repository.

git push [variable name] [branch]
This command sends the branch commits to your remote repository.

git push –all [variable name]
This command pushes all branches to your remote repository.

git push [variable name] :[branch name]
This command deletes a branch on your remote repository.
--------------------------------------------------------------
git pull
===============================================================
git pull [Repository Link]
This command fetches and merges changes on the remote server to your working directory.

---------------------------------------------------------------
git stash
===============================================================
git stash save
This command temporarily stores all the modified tracked files.

git stash pop
This command restores the most recently stashed files.

git stash list
This command lists all stashed changesets.

git stash drop
This command discards the most recently stashed changeset.
-----------------------xxxxxxxxxxxx--------------------------

Getting & Creating Projects

Command	Description
git init	Initialize a local Git repository
git clone ssh://git@github.com/[username]/[repository-name].git	Create a local copy of a remote repository

Basic Snapshotting

Command	Description
git status	Check status
git add [file-name.txt]	Add a file to the staging area
git add -A	Add all new and changed files to the staging area
git commit -m "[commit message]"	Commit changes
git rm -r [file-name.txt]	Remove a file (or folder)

Branching & Merging

Command	Description
git branch	List branches (the asterisk denotes the current branch)
git branch -a	List all branches (local and remote)
git branch [branch name]	Create a new branch
git branch -d [branch name]	Delete a branch
git push origin --delete [branch name]	Delete a remote branch
git checkout -b [branch name]	Create a new branch and switch to it
git checkout -b [branch name] origin/[branch name]	Clone a remote branch and switch to it
git branch -m [old branch name] [new branch name]	Rename a local branch
git checkout [branch name]	Switch to a branch
git checkout -	Switch to the branch last checked out
git checkout -- [file-name.txt]	Discard changes to a file
git merge [branch name]	Merge a branch into the active branch
git merge [source branch] [target branch]	Merge a branch into a target branch
git stash	Stash changes in a dirty working directory
git stash clear	Remove all stashed entries

Sharing & Updating Projects

Command	Description
git push origin [branch name]	Push a branch to your remote repository
git push -u origin [branch name]	Push changes to remote repository (and remember the branch)
git push	Push changes to remote repository (remembered branch)
git push origin --delete [branch name]	Delete a remote branch
git pull	Update local repository to the newest commit
git pull origin [branch name]	Pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git	Add a remote repository
git remote set-url origin ssh://git@github.com/[username]/[repository-name].git	Set a repository's origin branch to SSH

Inspection & Comparison
Command	Description
git log	View changes
git log --summary	View changes (detailed)
git log --oneline	View changes (briefly)
git diff [source branch] [target branch]	Preview changes before merging